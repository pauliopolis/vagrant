# -*- mode: ruby -*-
# vi: set ft=ruby:

BOX = "generic/rhel8"
VERSION = "4.2.14"
NODES = 1
RAM = 2048
CPUS = 2

require_relative '../.secrets.rb'
include Secrets

unregister_script = %{
if sudo subscription-manager status; then
  sudo subscription-manager unregister
fi
}

Vagrant.configure("2") do |config|
  (1..NODES).each do |i|
    config.vm.define "node#{i}" do |node|

      node.vbguest.auto_update = false if Vagrant.has_plugin?("vagrant-vbguest")

      node.vm.provision "subscription-manager", type: "shell" do |subscribe|
        subscribe.inline = "sudo subscription-manager register --force --username=#{RHUSER} --password=#{RHPASS}"
      end # node.vm.provision

      node.vm.provision "dnf", type: "ansible_local", run: "always" do |dnf|
        dnf.playbook = "dnf.yml" 
        dnf.verbose = false
        dnf.compatibility_mode = "2.0"
      end # node.vm.provision

      node.trigger.before :destroy do |unregister|
        unregister.name = "Unregister VM"
        unregister.info = "Unregistering this VM from RedHat Subscription Manager..."
        unregister.warn = "If this fails, unregister VMs manually at https://access.redhat.com/management/subscriptions"
        unregister.run_remote = {inline: unregister_script}
        unregister.on_error = :continue
      end # node.trigger.before
      
      node.vm.provider "virtualbox" do |vbox|
        vbox.gui = false
        vbox.memory = RAM
        vbox.cpus = CPUS
	vbox.customize ['modifyvm', :id, '--graphicscontroller', 'vmsvga']
      end # node.vm.provider

      node.vm.box = BOX
      node.vm.hostname = "vb-node#{i}"
      node.vm.boot_timeout = 1500
      node.vm.synced_folder "../ansible", "/vagrant"
      node.vm.network "private_network", ip: "192.168.1.#{i + 10}"
    end # config.vm.define
  end # NODES loop
end # Vagrant.configure
