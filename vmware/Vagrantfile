# -*- mode: ruby -*-
# vi: set ft=ruby:

BOX = "generic/rhel8"
NODES = 3
RAM = 2048

require_relative '../.secrets.rb'
include Secrets

unregister_script = %{
if sudo subscription-manager status; then
  sudo subscription-manager unregister
fi
}

Vagrant.configure("2") do |config|
  (1..NODES).each do |i|
    config.vm.define "node#{i}" do |node|

      node.vm.provision "subscription-manager", type: "shell" do |subscribe|
        subscribe.inline = "sudo subscription-manager register --force --username=#{RHUSER} --password=#{RHPASS}"
      end # node.vm.provision

      node.vm.provision "dnf", type: "ansible_local", run: "always" do |dnf|
        dnf.playbook = "dnf.yml" 
        dnf.verbose = false
        dnf.compatibility_mode = "2.0"
      end # node.vm.provision

      node.trigger.before :destroy do |unregister|
        unregister.name = "Unregister VM"
        unregister.info = "Unregistering this VM from RedHat Subscription Manager..."
        unregister.warn = "If this fails, unregister VMs manually at https://access.redhat.com/management/subscriptions"
        unregister.run_remote = {inline: unregister_script}
        unregister.on_error = :continue
      end # node.trigger.before
      
      node.vm.provider "vmware_desktop" do |vmware|
        vmware.gui = false
        vmware.memory = RAM
        vmware.vmx['displayname'] = "vm:node#{i}"
        vmware.vmx['guestos'] = "rhel8-64"
      end # node.vm.provider

      node.vm.box = BOX
      node.vm.hostname = "vm-node#{i}"
      node.vm.boot_timeout = 1500
      node.vm.synced_folder "../ansible", "/vagrant"
      node.vm.network "private_network", ip: "192.168.2.#{i + 10}"

    end # config.vm.define
  end # NODES loop
end # Vagrant.configure
